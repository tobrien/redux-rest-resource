{"version":3,"sources":["../src/index.js"],"names":["reduceReducers","combineReducers","mergeReducers","HttpError","fetch","createResource","mergeObjects","object","sources","concat","Array","prototype","uniqueKeys","apply","Object","keys","map","filter","value","index","self","indexOf","reduce","soFar","key","assign","source","name","url","actions","pick","args","actionsOpts","length","reducers","types"],"mappings":";;;;;;;;;AAIA;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;oBACQA,c;;;;;;oBAAgBC,e;;;;;;oBAAiBC,a;;;;;;;;;kBACjCC,S;;;;;;kBAAWC,K;;;QAYHC,c,GAAAA,c;;AAlBhB;;AACA;;AACA;;;;;;;AANA;AACA;;AAWA,IAAMC,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAwB;AAAA,oCAAZC,OAAY;AAAZA,WAAY;AAAA;;AAC3C,MAAMC,SAASC,MAAMC,SAAN,CAAgBF,MAA/B;AACA,MAAMG,aAAaH,OAAOI,KAAP,CAAaC,OAAOC,IAAP,CAAYR,MAAZ,CAAb,EAAkCC,QAAQQ,GAAR,CAAYF,OAAOC,IAAnB,CAAlC,EAChBE,MADgB,CACT,UAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf;AAAA,WAAwBA,KAAKC,OAAL,CAAaH,KAAb,MAAwBC,KAAhD;AAAA,GADS,CAAnB;AAEA,SAAOP,WAAWU,MAAX,CAAkB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACvCD,UAAMC,GAAN,IAAaV,OAAOW,MAAP,gBAAcF,MAAMC,GAAN,KAAc,EAA5B,4BAAmChB,QAAQQ,GAAR,CAAY;AAAA,aAAUU,OAAOF,GAAP,KAAe,EAAzB;AAAA,KAAZ,CAAnC,GAAb,CADuC,CACoD;AAC3F,WAAOD,KAAP;AACD,GAHM,EAGJhB,MAHI,CAAP;AAID,CARD;;AAUO,SAASF,cAAT,OAAuE;AAAA,MAA9CsB,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,GAAwC,QAAxCA,GAAwC;AAAA,0BAAnCC,OAAmC;AAAA,MAAnCA,OAAmC,gCAAzB,EAAyB;AAAA,uBAArBC,IAAqB;AAAA,MAArBA,IAAqB,6BAAd,EAAc;AAAA,MAAPC,IAAO;;AAC5E,MAAIC,cAAc1B,aAAa,EAAb,4BAAiCuB,OAAjC,CAAlB;AACA,MAAIC,KAAKG,MAAT,EAAiB;AACfD,kBAAcF,KAAKR,MAAL,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,0BAAqBD,KAArB,sBAA6BC,GAA7B,EAAmCQ,YAAYR,GAAZ,CAAnC;AAAA,KAAZ,EAAmE,EAAnE,CAAd;AACD;AACD,SAAO;AACLK,aAAS,uCAAeF,UAAf,EAAqBC,QAArB,EAA0BC,SAASG,WAAnC,IAAmDD,IAAnD,EADJ;AAELG,cAAU,yCAAgBP,UAAhB,IAAyBI,IAAzB,EAFL;AAGLI,WAAO,mCAAaR,UAAb,EAAmBE,SAASG,WAA5B,IAA4CD,IAA5C;AAHF,GAAP;AAKD","file":"index.js","sourcesContent":["\n// https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js\n// var User = $resource('/user/:userId', {userId:'@id'});\n\nimport {defaultActions} from './defaults';\nimport {createActions} from './actions';\nimport {createReducers} from './reducers';\nimport {createTypes} from './types';\n\nexport * from './defaults';\nexport {reduceReducers, combineReducers, mergeReducers} from './reducers/helpers';\nexport {HttpError, fetch} from './helpers/fetch';\n\nconst mergeObjects = (object, ...sources) => {\n  const concat = Array.prototype.concat;\n  const uniqueKeys = concat.apply(Object.keys(object), sources.map(Object.keys))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  return uniqueKeys.reduce((soFar, key) => {\n    soFar[key] = Object.assign(soFar[key] || {}, ...sources.map(source => source[key] || {})); // eslint-disable-line no-param-reassign\n    return soFar;\n  }, object);\n};\n\nexport function createResource({name, url, actions = {}, pick = [], ...args}) {\n  let actionsOpts = mergeObjects({}, defaultActions, actions);\n  if (pick.length) {\n    actionsOpts = pick.reduce((soFar, key) => ({...soFar, [key]: actionsOpts[key]}), {});\n  }\n  return {\n    actions: createActions({name, url, actions: actionsOpts, ...args}),\n    reducers: createReducers({name, ...args}),\n    types: createTypes({name, actions: actionsOpts, ...args})\n  };\n}\n"]}