{"version":3,"sources":["../../src/helpers/util.js"],"names":["includes","array","key","indexOf","isObject","maybeObject","pick","obj","keys","reduce","soFar","startsWith","string","target","String","slice","length","ucfirst","str","charAt","toUpperCase","substr","upperSnakeCase","split","letter","index","charCode","charCodeAt"],"mappings":";;;;;;;;AACO,IAAMA,8BAAW,SAAXA,QAAW,CAACC,KAAD,EAAQC,GAAR;AAAA,SACtBD,MAAME,OAAN,CAAcD,GAAd,MAAuB,CAAC,CADF;AAAA,CAAjB;;AAGA,IAAME,8BAAW,SAAXA,QAAW;AAAA,SACtB,QAAOC,WAAP,yCAAOA,WAAP,OAAuB,QADD;AAAA,CAAjB;;AAGA,IAAMC,sBAAO,SAAPA,IAAO,CAACC,GAAD;AAAA,oCAASC,IAAT;AAASA,QAAT;AAAA;;AAAA,SAClBA,KAAKC,MAAL,CAAY,UAACC,KAAD,EAAQR,GAAR,EAAgB;AAC1B,QAAIF,SAASQ,IAAT,EAAeN,GAAf,KAAuBK,IAAIL,GAAJ,CAA3B,EAAqC;AACnCQ,YAAMR,GAAN,IAAaK,IAAIL,GAAJ,CAAb,CADmC,CACZ;AACxB;AACD,WAAOQ,KAAP;AACD,GALD,EAKG,EALH,CADkB;AAAA,CAAb;;AAQA,IAAMC,kCAAa,SAAbA,UAAa,CAACC,MAAD,EAASC,MAAT;AAAA,SACxBC,OAAOF,MAAP,EAAeG,KAAf,CAAqB,CAArB,EAAwBF,OAAOG,MAA/B,MAA2CH,MADnB;AAAA,CAAnB;;AAGA,IAAMI,4BAAU,SAAVA,OAAU;AAAA,SACrBC,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,MAAJ,CAAW,CAAX,CADT;AAAA,CAAhB;;AAGA,IAAMC,0CAAiB,SAAjBA,cAAiB;AAAA,SAC5BR,OAAOF,OAAOW,KAAP,CAAa,EAAb,EAAiBd,MAAjB,CAAwB,UAACC,KAAD,EAAQc,MAAR,EAAgBC,KAAhB,EAA0B;AACvD,QAAMC,WAAWF,OAAOG,UAAP,CAAkB,CAAlB,CAAjB;AACA,WAAOjB,QAAQ,CAACe,SAASC,WAAW,EAApB,SAA6BF,MAA7B,GAAwCA,MAAzC,EAAiDJ,WAAjD,EAAf;AACD,GAHM,EAGJ,EAHI,CAAP,CAD4B;AAAA,CAAvB","file":"util.js","sourcesContent":["\nexport const includes = (array, key) =>\n  array.indexOf(key) !== -1;\n\nexport const isObject = maybeObject =>\n  typeof maybeObject === 'object';\n\nexport const pick = (obj, ...keys) =>\n  keys.reduce((soFar, key) => {\n    if (includes(keys, key) && obj[key]) {\n      soFar[key] = obj[key]; // eslint-disable-line no-param-reassign\n    }\n    return soFar;\n  }, {});\n\nexport const startsWith = (string, target) =>\n  String(string).slice(0, target.length) === target;\n\nexport const ucfirst = str =>\n  str.charAt(0).toUpperCase() + str.substr(1);\n\nexport const upperSnakeCase = string =>\n  String(string.split('').reduce((soFar, letter, index) => {\n    const charCode = letter.charCodeAt(0);\n    return soFar + (index && charCode < 97 ? `_${letter}` : letter).toUpperCase();\n  }, ''));\n"]}