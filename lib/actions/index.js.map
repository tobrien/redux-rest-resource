{"version":3,"sources":["../../src/actions/index.js"],"names":["getActionName","name","pluralName","actionKey","actionOpts","actualPluralName","isArray","createActions","defaultUrl","url","actions","credentials","Object","keys","reduce","actionFuncs","action","reducerOpts","type","urlParams","actionName","actionFunc","context","contextOpts","dispatch","status","fetchUrl","fetchOptions","then","transformResponse","options","receivedAt","Date","now","payload","catch","err","statusCode","code","body"],"mappings":"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","file":"index.js","sourcesContent":["// @inspiration https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js\n\nimport {getActionType} from './../types';\nimport {applyTransformPipeline, buildTransformPipeline} from './transform';\nimport {parseUrlParams} from './../helpers/url';\nimport {buildFetchUrl, buildFetchOpts, fetch} from './../helpers/fetch';\nimport {pick, ucfirst} from './../helpers/util';\n\nimport {defaultTransformResponsePipeline} from './../defaults';\n// const d = ::console.info;\n\nconst getActionName = ({name, pluralName, actionKey, actionOpts = {}}) => {\n  const actualPluralName = pluralName || `${name}s`;\n  return `${actionKey}${ucfirst(actionOpts.isArray ? actualPluralName : name)}`;\n};\n\nconst createActions = ({name, pluralName, url: defaultUrl, actions = {}, credentials}) => (\n  Object.keys(actions).reduce((actionFuncs, actionKey) => {\n    const action = actions[actionKey];\n    const actionOpts = {...actions[actionKey], credentials};\n    const reducerOpts = pick(actionOpts, 'assignResponse');\n    const type = getActionType({name, action, actionKey});\n    const url = action.url || defaultUrl;\n    const urlParams = parseUrlParams(url);\n    // Compute actual function name\n    const actionName = getActionName({name, pluralName, actionKey, actionOpts});\n    // Actual action function\n    const actionFunc = (context, contextOpts = {}) => (dispatch) => {\n      // First dispatch a pending action\n      dispatch({type, status: 'pending', context});\n      const fetchUrl = buildFetchUrl({url, urlParams, context, contextOpts});\n      const fetchOptions = buildFetchOpts({context, contextOpts, actionOpts});\n      // d(`${name}Actions.${actionName}()`, fetchUrl, fetchOptions);\n      return fetch(fetchUrl, fetchOptions)\n        .then(applyTransformPipeline(buildTransformPipeline(defaultTransformResponsePipeline, actionOpts.transformResponse)))\n        .then(payload => dispatch({type, status: 'resolved', context, options: reducerOpts, receivedAt: Date.now(), ...payload}))\n        .catch((err) => {\n          // Catch HttpErrors\n          if (err.statusCode) {\n            dispatch({type, status: 'rejected', code: err.statusCode, body: err.body, context, options: reducerOpts, receivedAt: Date.now()});\n          // Catch regular Errors\n          } else {\n            dispatch({type, status: 'rejected', context, options: reducerOpts, err, receivedAt: Date.now()});\n          }\n          throw err;\n        });\n    };\n    return {...actionFuncs, [actionName]: actionFunc};\n  }, {})\n);\n\nexport {getActionName, createActions};\n"]}